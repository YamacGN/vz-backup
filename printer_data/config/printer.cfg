[include shell_command.cfg]
[include mainsail.cfg]
[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# [include klicky-probe.cfg]
#[include KAMP_Settings.cfg]
#[include Adaptive_Meshing.cfg]  
# [include klicky-bed-mesh-calibrate.cfg]
[include macros.cfg]
[include reshelper.cfg]

[exclude_object]

# [mcu btt_adxl345]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_45474E621B0B474A-if00


# [adxl345]
# cs_pin: btt_adxl345:gpio9
# #spi_bus: spi1a
# spi_software_sclk_pin: btt_adxl345:gpio10
# spi_software_mosi_pin: btt_adxl345:gpio11
# spi_software_miso_pin: btt_adxl345:gpio8
# axes_map: -x,-y,-z


# [adxl345]
# cs_pin: cartographer:PA3
# spi_bus: spi1

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     150, 150, 20

# accel_per_hz: 60

[input_shaper]
shaper_freq_x: 91.4
shaper_type_x: mzv
shaper_freq_y: 63.6
shaper_type_y: mzv

[temperature_sensor Octopus V1.1]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor BTT Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[verify_heater extruder]
heating_gain: 0.1
check_gain_time: 999999999999
hysteresis: 999999999999  
max_error: 999999999999 

[printer]
kinematics: corexy
max_velocity: 2000
max_accel: 100000
max_accel_to_decel: 50000
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 15

[force_move]
enable_force_move: True
# See docs/Config_Reference.md for a description of parameters.
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2C0012001050535556323420-if00
restart_method: command

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     # Somewhere slightly above the middle of your print bed
#     147,154, 20

#Driver7
[stepper_y1]
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps: 16
rotation_distance: 40

[tmc5160 stepper_y1]
spi_bus: spi1
cs_pin: PD3
interpolate: false
run_current: 2
sense_resistor: 0.033


# Driver6
[stepper_x]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
microsteps: 16
rotation_distance: 40
endstop_pin: PG9
position_max: 320
position_endstop: 0
homing_speed: 200



[tmc5160 stepper_x]
# spi_software_mosi_pin: PA7
# spi_software_sclk_pin: PA5
# spi_software_miso_pin: PA6
spi_bus: spi1
cs_pin: PE1
interpolate: false
run_current: 2
sense_resistor: 0.033


# Driver1

# Driver5
[stepper_x1]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 40


[tmc5160 stepper_x1]
spi_bus: spi1
cs_pin: PE4
interpolate: false
run_current:  2
sense_resistor: 0.033


# Driver4
[stepper_y]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 40
endstop_pin: PG11
position_endstop: 0
position_max: 310
homing_speed: 200


[tmc5160 stepper_y]
# spi_software_mosi_pin: PA7
# spi_software_sclk_pin: PA5
# spi_software_miso_pin: PA6
spi_bus: spi1
cs_pin: PF2
interpolate: false
run_current: 2
sense_resistor: 0.033



# # Driver2
[stepper_z2]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 256
rotation_distance: 8


[tmc2209 stepper_z2]
uart_pin: PC6
run_current: 1.2
stealthchop_threshold: 0
interpolate: true

# # Driver1
[stepper_z]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -20
homing_speed: 50
microsteps: 256



[tmc2209 stepper_z]
uart_pin: PD11
run_current: 1.2
stealthchop_threshold: 0
interpolate: true

#driver0
[stepper_z1]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 8
microsteps: 256


[tmc2209 stepper_z1]
uart_pin: PC4
run_current: 1.2
stealthchop_threshold: 0
interpolate: true

[z_tilt]
#Use Z_TILT_ADJUST to level the bed .
#3z_positions: Location of toolhead
##--------------------------------------------------------------------
#Uncomment below for 250mm build
z_positions:
  150, 335
  -50, 18
   350, 18

points:
  164, 242
  30, 0
  310, 0


##--------------------------------------------------------------------

speed: 600
horizontal_move_z: 15
retries: 10
retry_tolerance: 0.05

[extruder]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
sensor_type: Generic 3950
min_temp: 0
max_temp: 350
sensor_pin: PF4
#control: pid
nozzle_diameter: 0.5
filament_diameter: 1.75
heater_pin: PB11 
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 22.2
Gear_ratio: 50:10
max_extrude_only_distance: 1000.0
max_extrude_cross_section: 500
max_extrude_only_velocity: 200
max_extrude_only_accel: 10000
pressure_advance: 0.02
pressure_advance_smooth_time: 0.03
#pid_Kp:25.88
#pid_Ki:2.185
#pid_Kd:76.690

[tmc2209 extruder]
uart_pin: PC7
run_current: 0.45
stealthchop_threshold: 0
interpolate: true

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
#control: watermark
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: PA8
heater: extruder
heater_temp: 50.0

# [probe]
# pin: PG10
# x_offset: 0
# y_offset: 32.261
# #z_offset: 6.674
# speed: 50
# samples: 1
# sample_retract_dist: 1.0
# lift_speed: 200
# samples_result: average
# samples_tolerance: 0.100
# samples_tolerance_retries: 3

[scanner]
serial:/dev/serial/by-id/usb-Cartographer_614e_18000C000643564738333920-if00
x_offset: 0                          
#adjust for your offset
y_offset: 15                         
#adjust for your offset
calibration_method: touch 
sensor: cartographer
sensor_alt: carto
#alternate name to call commands. CARTO_TOUCH etc
scanner_touch_z_offset: 0.05         
calibration_method: touch 
sensor: cartographer
sensor_alt: carto
#alternate name to call commands. CARTO_TOUCH etc
scanner_touch_z_offset: 0.05         
#this is the default and will be overwritten and added to the DO NOT SAVE area by using UI to save z offset



[safe_z_home]
home_xy_position: 150, 150
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
z_hop: 3

[bed_mesh]
speed: 500
horizontal_move_z: 8
mesh_min: 60, 60
mesh_max: 270, 230
probe_count: 20, 20
algorithm: bicubic
zero_reference_position: 125, 125    


# [fan]
# pin: PB0
# max_power: 1.0
# enable_pin: PB10
# kick_start_time: 0.1
# cycle_time: 0.00004 #25kHz
# hardware_pwm: False
# off_below: 0.06

[fan]
pin: PE5
max_power:1  
# 若需微调max_power参数以适应您的主板，先设置为1.0，在Klipper仪表板中逐步增加风扇速度，直到实际速度不再随设定值上升而上升。将此速度除以100，填入max_power参数即可。
# 此参数定义了引脚所允许的最大功率(0.0到1.0之间)。
# 取值1.0允许引脚长期全功率驱动，而0.5则意味着最多只能驱动一半的时间。
# 此设置用于限制风扇长期的总功率输出。
# 若此值低于1.0，风扇速度请求将依此值缩放(如max_power为0.9且请求80%速度，实际输出功率为72%) 。
shutdown_speed: 0 
# 当微控制器软件出错时，风扇所需速度(0.0到1.0之间)。
# 默认为0。
cycle_time: 0.00004
# 每个 PWM 功率周期到风扇的时间（以秒为单位）。
# 建议在使用基于软件的 PWM 时，此值为10毫秒或更大。
# 默认为0.010秒。
hardware_pwm: False 
# 勾选此项启用硬件PWM，否则使用软件PWM。
# 大多数风扇不太适用硬件PWM，除非需要高速切换，否则不建议启用。
# 使用硬件PWM时，实际占空周期时间受实现方式限制，可能与所设cycle_time有较大出入。
# 默认为False。
# kick_start_time: 0.100 
# 在首次启用或将其增加超过50%时，运行风扇全速的时间（以秒为单位），以帮助启动风扇旋转。
# 默认为0.100秒。
off_below: 0.01
# 当占空比低于14%时，此款无刷驱动将无法驱动鼓风机。在Max_power为1的情况下，off_below应设置为0.14。
# 调试此设置时，逐步降低风扇速度，确定能可靠驱动鼓风机而不失速的最低输入速度。
# 将off_below设置为该速度对应的占空比(如14% -> 0.14/Max_power -> 0.14/1 -> 0.14)，或略高即可。
# 此参数为能驱动风扇的最低输入速度(0.0到1.0之间)。
# 当请求速度低于off_below时，风扇将被关闭。
# 此设置有助于防止风扇失速，并确保良好的启动响应。
# 调试时，先将off_below设为0.0，让风扇运转。
# 逐步降低风扇速度，确定能可靠驱动鼓风机而不失速的最低输入速度。
# 将off_below设置为该速度对应的占空比(如12% -> 0.12)或略高。


# [fan]

# pin: PE5

# max_power: 0.8 

# # This should be set to 0.8 on most motherboards to give full range of control to your slicer. 

# # Anything above 80% duty cycle will be full power on this particular brushless driver.

# # To fine-tune the max_power parameter for your particular motherboard, set max_power to 1.0, go into the Klipper dashboard, and increase fan speed 1% at a time until the actual fan speed stops increasing as you increase the fan speed. Divide the fan speed at this point by 100 and enter it into the max_power parameter.

# # This parameter defines the maximum power (expressed as a value from 0.0 to 1.0) that the pin may be set to. 

# # The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5 would allow the pin to be enabled for no more than half the time. 

# # This setting may be used to limit the total power output (over extended periods) to the fan. 

# # If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).

# shutdown_speed: 0 

# # The desired fan speed (expressed as a value from 0.0 to 1.0) if 

# # The microcontroller software enters an error state. 

# # The default is 0.

# cycle_time: 0.01

# # The amount of time (in seconds) for each PWM power cycle to the fan. 

# # It is recommended this be 10 milliseconds or greater when using software-based PWM. 

# # The default is 0.010 seconds.

# hardware_pwm: False 

# # Enable this to use hardware PWM instead of software PWM. 

# # Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 

# # When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 

# # The default is False.

# kick_start_time: 0.100 

# # Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 

# # The default is 0.100 seconds.

# off_below: 0.1 

# # The blower will not spin with the included brushless driver when the duty cycle is below 8%. When scaled with Max_power at 0.8, the off_below parameter should be set to 0.1. 

# # To calibrate this setting, gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 

# # Set off_below to the duty cycle corresponding to this value (for example, 8% -> 0.08/Max_power -> 0.08/0.8 -> 0.1) or slightly higher. 

# # This parameter is the minimum input speed that will power the fan (expressed as a value from 0.0 to 1.0). 

# # When a speed lower than off_below is requested, the fan will instead be turned off. 

# # This setting may be used to prevent fan stalls and to ensure effective kick starts. 

# # To calibrate this setting, start with off_below set to 0.0 and the fan spinning. 

# # Gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 

# # Set off_below to the duty cycle corresponding to this value (for example, 12% -> 0.12) or slightly higher.

# #Tachometer_pin:

# # Tachometer input pin for monitoring fan speed. A pullup is generally required. 

# # This parameter is optional.

# #Tachometer_ppr: 1

# # When tachometer_pin is specified, this is the number of pulses per revolution of the tachometer signal.

# #Tachometer_poll_interval: 0.0005

# # When tachometer_pin is specified, this is the polling period of the tachometer pin, in seconds. 

# # The default is 0.0015, which is fast enough for fans below 10,000 RPM at 2 PPR. 

# # This must be smaller than 30/(tachometer_ppr*rpm), with some margin, where rpm is the 

# # maximum speed (in RPM) of the fan.


[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}


[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED_TEMP|int %}
  {% set EXTRUDER = params.EXTRUDER_TEMP|int %}
  M190 S{BED}  ;Set bed temperature and wait
  _CHOME  ;Home all axes if not homed
  _CZTILT  ;Z Tilt if not done
  BED_MESH_CALIBRATE  ;Bed Mesh Calibration
  BED_MESH_PROFILE LOAD=default  ;Load Bed Mesh Profile
  M109 S{EXTRUDER}  ;Set extruder temperature and wait
  M190 S{BED}  ;Set bed temperature and wait
  _PURGE_LINE  ;Front Purge

[gcode_macro PRINT_END]
gcode:
  G1 E-2 F1800  ;Retract filament
  TURN_OFF_HEATERS  ;Turn off heaters
  PARK_CENTER_REAR  ;Park central rear
  M84  ;Disable motors


[gcode_macro M190]
rename_existing: M190.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M190.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro _CHOME]
gcode:
  {% if printer["gcode_macro status_homing"] != null %}
    status_homing
  {% endif %}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}
[gcode_macro _CZTILT]
gcode:
  {% if printer["gcode_macro status_leveling"] != null %}
    status_leveling
  {% endif %}
    {% if printer.z_tilt.applied == False %}
        Z_TILT_ADJUST
    {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro M109]
rename_existing: M109.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M109.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro _PURGE_LINE]
gcode:
  {% if printer["gcode_macro status_cleaning"] != null %}
    status_cleaning
  {% endif %}
  SAVE_GCODE_STATE NAME=Pre_Prime
        
  G90
  G92 E0 ;Reset Extruder

  G1 Z10.0 F3000 ;Move Z Axis up
  G1 X0 Y0;
  G1 E10.0 F1800
  G1 Z0.28 F5000.0 ;Move to start position
  G1 X220 Y0 Z0.28 F1500.0 E30 ;Draw the first line
  G92 E0 ;Reset Extruder
  G1 Z10 F3000 ;Move Z Axis up
  RESTORE_GCODE_STATE NAME=Pre_Prime

  {% if printer["gcode_macro status_printing"] != null %}
    status_printing
  {% endif %}

[gcode_macro PARK_CENTER_REAR]
gcode:
    {% if printer["gcode_macro status_busy"] != null %}
      status_busy
    {% endif %}
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}

    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  
    {% if printer["gcode_macro status_ready"] != null %}
    status_ready
    {% endif %}

[exclude_object]

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro ACCELL_TEST_X]

gcode:

  {% set steps = params.STEPS|default(100)|int %}
  {% set speed = params.VELOCITY|default(1000)|float * 60 %}
  
  {% set inset = 10.0|float %} 
  {% set accel = 10000|int %} 
  {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
  {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
  {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
  {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
  
  SAVE_GCODE_STATE NAME=accelltest_state
  
  SET_VELOCITY_LIMIT ACCEL={accel} 
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL={accel}
  G28
  G1 Z5
  G1 X{minX} Y{minY} F{speed} 
  
  {% for INTERVAL in range(steps) %}
      {% set eff = accel + (INTERVAL * 1000) %} 
      SET_VELOCITY_LIMIT ACCEL={eff} 
      SET_VELOCITY_LIMIT ACCEL_TO_DECEL={eff}
      G1 X{minX} Y{minY} F{speed}  
      G1 X{maxX} Y{maxY} F{speed}  
  
  {% endfor %}    
  
  RESTORE_GCODE_STATE NAME=accelltest_state 

[gcode_macro DATA_SAMPLE]
gcode:
  {% set bed_temp = params.BED_TEMP|default(90)|int %}
  {% set nozzle_temp = params.NOZZLE_TEMP|default(250)|int %}
  {% set min_temp = params.MIN_TEMP|default(40)|int %}
  {% set max_temp = params.MAX_TEMP|default(70)|int %}
  G90
  M106 S255
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  RESPOND TYPE=command MSG='Starting Phase 1 of 4'
  M117 Starting Phase 1 of 4
  M106 S0
  G28
  G0 Z1
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={min_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 Starting Phase 2 of 4
  RESPOND TYPE=command MSG='Starting Phase 2 of 4'
  M106 S0
  G28 Z0
  G0 Z2
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 "Starting Phase 3 of 4"
  RESPOND TYPE=command MSG='Starting Phase 3 of 4'
  M106 S0
  G28 Z0
  G0 Z3
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  RESPOND TYPE=command MSG='Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/'
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/"
  RESPOND TYPE=command MSG='Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta'
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c $0"
timeout: 90.0
verbose: True
  
#[neopixel my_neopixel]
#pin: PB0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*#
